name: Development Build

on:
  push:
    paths-ignore: [docs/**, README.md]
    branches: [ development-0.4.X.X ]

jobs:
  # ------------------------------
  # Builds the code
  # ------------------------------
  build:
    name: Build on node Python ${{matrix.python_version}}
    outputs: 
      tag: ${{steps.tag.outputs.tag}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ['3.7', '3.8']
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Setup Python ${{matrix.python_version}}
      uses: actions/setup-python@v2
      with:
        python-version: ${{matrix.python_version}}
    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -U setuptools wheel
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build artifact
      run: python setup.py sdist bdist_wheel
    - name: Calculate Version
      id: tag
      run: |
        TAG=$(cat $GITHUB_WORKSPACE/.version)$GITHUB_RUN_NUMBER
        echo "Tag: $TAG"
        echo "::set-output name=tag::$TAG"


  # ------------------------------
  # Turn on ENV
  # ------------------------------
  turn-on-env:
    name: Turn on test environment
    runs-on: ubuntu-latest
    env:
      TPLINK_USER: ${{ secrets.TPLINK_USER }}
      TPLINK_PASS: ${{ secrets.TPLINK_PASS }}
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2-beta
        with:
          node-version: 11.x
      - uses: actions/checkout@v2
      - name: Install npm dependencies
        run: |
          pushd ext-res/tests
          npm install
          popd
      - name: Powering on the dev-environment
        run: |
          pushd ext-res/tests
          node ./switch.js --dev MEROSS_LAB --toggle=on
          popd

  # ---------------------------------
  # Testing
  # ---------------------------------
  test:
    name: Testing
    runs-on: ubuntu-latest
    needs: [build, turn-on-env]
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python ${{matrix.python_version}}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install pytest-html
        pip install pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Wait a bit before running tests
      run: |
        echo "Waiting 120 seconds before starting..."
        sleep 120
        echo "Waiting done."
    - name: Test with pytest
      env:
        MEROSS_EMAIL: ${{ secrets.MEROSS_EMAIL }}
        MEROSS_PASSWORD: ${{ secrets.MEROSS_PASSWORD }}
      run: |
        pip install .
        # Set credentials into memory
        meross_api_cli auth login --email $MEROSS_EMAIL --password "$MEROSS_PASSWORD"
        pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=. --cov-report=xml --cov-report=html --html=junit/test-results.html --self-contained-html
        meross_api_cli auth logout
    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results
        path: junit/
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

    - name: Upload pytest test results
      uses: actions/upload-artifact@v2
      with:
        name: pytest-results-html
        path: htmlcov/
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}

  # ------------------------------
  # Turn off ENV
  # ------------------------------
  turn-off-env:
    name: Turn off test environment
    runs-on: ubuntu-latest
    needs: [test]
    env:
      TPLINK_USER: ${{ secrets.TPLINK_USER }}
      TPLINK_PASS: ${{ secrets.TPLINK_PASS }}
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2-beta
        with:
          node-version: 11.x
      - uses: actions/checkout@v2
      - name: Install npm dependencies
        run: |
          pushd ext-res/tests
          npm install
          popd
      - name: Powering on the dev-environment
        run: |
          pushd ext-res/tests
          node ./switch.js --dev MEROSS_LAB --toggle=off
          popd
    if: ${{ always() }}

  # ------------------------------
  # Pre-Release on DEV
  # ------------------------------
  pre-release:
    name: Pre-Release on GitHub
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
    - uses: actions/checkout@v2
    - name: Calculate Version
      id: tag
      run: |
        TAG=$(cat $GITHUB_WORKSPACE/.version)
        echo "Tag: $TAG"
        echo "::set-env name=tag::$TAG"
    - name: Create a Release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
        tag_name: ${{env.tag}}-${{github.RUN_NUMBER}}
        # The name of the release. For example, `Release v1.0.1`
        release_name: Development release ${{env.tag}}-${{github.RUN_NUMBER}}
        # `true` to identify the release as a prerelease. `false` to identify the release as a full release. Default: `false`
        prerelease: true
